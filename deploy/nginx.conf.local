
#user  nobody;
worker_processes 1;
worker_rlimit_nofile 2048;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    upstream myserver{
        #ip_hash;
        server  39.97.81.149:80 weight=2;
        server  123.57.204.209:80 weight=2;
        server  47.103.194.19:8080 weight=1;
        #fair;
        #server  192.168.0.111:8080;
        #server  192.168.0.111:8081;
		keepalive 30; 
    }

    server {
        listen       80;
        server_name  localhost;

		location / {
            proxy_set_header Host $http_host:$proxy_port;
            proxy_pass http://myserver;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
		#当访问静态资源时，使用alias替换资源路径
        location /resources/ {
            alias  /usr/local/opt/openresty/nginx/html/resources/;
            index  index.html index.htm;
        }
    }

    server {
        listen       9001;
        #listen       somename:8080;
        #server_name  somename  alias  another.alias;
        server_name  192.168.0.111;

        location ~ /edu/ {
	    proxy_pass	http://192.168.0.111:8080;
            #root   html;
            index  index.jsp index.html index.htm;
        }
        location ~ /vod/ {
	    proxy_pass	http://127.0.0.1:8081;
            #root   html;
            index  index.jsp index.html index.htm;
        }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

